{"ast":null,"code":"import _slicedToArray from\"D:\\\\Speed Tech\\\\Ofer\\\\Recat\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{doApiGet,apiUrl}from'../services/apiService';import CountryItem from'./CountryItem';function Main(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),state_arr=_useState2[0],setStateArr=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),allState_arr=_useState4[0],setAllStateArr=_useState4[1];var _useState5=useState(\"Israel\"),_useState6=_slicedToArray(_useState5,2),countryName=_useState6[0],setCourtryName=_useState6[1];useEffect(function(){// let url = \"https://restcountries.eu/rest/v2/name/israel\"\nvar url=\"https://restcountries.eu/rest/v2/name/israel?fullText=true\";if(props.match){if(props.match.params.name){url=\"https://restcountries.eu/rest/v2/name/\"+props.match.params.name+\"?fullText=true\";// url = \"https://restcountries.eu/rest/v2/name/\" + props.match.params.name;\n}if(props.match.params.countryCode){url=\"https://restcountries.eu/rest/v2/name/\"+countryName+\"?fullText=true\";// url = \"https://restcountries.eu/rest/v2/name/\" + props.match.params.countryCode;\n}}doApiGet(url)// doApiGet(apiUrl + props.name)\n.then(function(data){// console.log(data);\nsetStateArr(data);}).catch(function(err){alert(err);console.log(err);});},[props.match]);useEffect(function(){// let url =\"https://restcountries.eu/rest/v2/alpha/co\";\nvar url=\"https://restcountries.eu/rest/v2/all\";doApiGet(url).then(function(data){setAllStateArr(data);});},[]);return/*#__PURE__*/React.createElement(\"div\",{className:\"container mt-3\"},state_arr.length>0?state_arr.map(function(item,i){return/*#__PURE__*/React.createElement(CountryItem,{key:item.callingCodes[0],item:item,allState_arr:allState_arr,setCourtryName:setCourtryName});}):\"result Not Found\");}export default Main;","map":{"version":3,"sources":["D:/Speed Tech/Ofer/Recat/react-app/src/atlas_comps/main.js"],"names":["React","useState","useEffect","doApiGet","apiUrl","CountryItem","Main","props","state_arr","setStateArr","allState_arr","setAllStateArr","countryName","setCourtryName","url","match","params","name","countryCode","then","data","catch","err","alert","console","log","length","map","item","i","callingCodes"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,QAAT,CAAmBC,MAAnB,KAAiC,wBAAjC,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAKA,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,eACcN,QAAQ,CAAC,EAAD,CADtB,wCACZO,SADY,eACDC,WADC,8BAEoBR,QAAQ,CAAC,EAAD,CAF5B,yCAEZS,YAFY,eAEEC,cAFF,8BAGkBV,QAAQ,CAAC,QAAD,CAH1B,yCAGZW,WAHY,eAGAC,cAHA,eAKjBX,SAAS,CAAC,UAAM,CACZ;AACA,GAAIY,CAAAA,GAAG,CAAE,4DAAT,CACA,GAAIP,KAAK,CAACQ,KAAV,CAAiB,CACb,GAAIR,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,IAAvB,CAA6B,CACzBH,GAAG,CAAE,yCAAyCP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,IAA5D,CAAiE,gBAAtE,CACA;AACH,CACD,GAAIV,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBE,WAAvB,CAAoC,CAChCJ,GAAG,CAAE,yCAAyCF,WAAzC,CAAqD,gBAA1D,CACA;AACH,CACJ,CAEGT,QAAQ,CAACW,GAAD,CACJ;AADJ,CAEKK,IAFL,CAEU,SAAAC,IAAI,CAAI,CACV;AACAX,WAAW,CAACW,IAAD,CAAX,CACH,CALL,EAMKC,KANL,CAMW,SAAAC,GAAG,CAAI,CACVC,KAAK,CAACD,GAAD,CAAL,CACAE,OAAO,CAACC,GAAR,CAAYH,GAAZ,EACH,CATL,EAWH,CAzBI,CAyBF,CAACf,KAAK,CAACQ,KAAP,CAzBE,CAAT,CA2BAb,SAAS,CAAC,UAAM,CACZ;AACA,GAAIY,CAAAA,GAAG,CAAG,sCAAV,CACAX,QAAQ,CAACW,GAAD,CAAR,CACKK,IADL,CACU,SAAAC,IAAI,CAAI,CACVT,cAAc,CAACS,IAAD,CAAd,CACH,CAHL,EAMH,CATQ,CASN,EATM,CAAT,CAaA,mBACI,2BAAK,SAAS,CAAC,gBAAf,EACMZ,SAAS,CAACkB,MAAV,CAAmB,CAApB,CAAyBlB,SAAS,CAACmB,GAAV,CAAc,SAACC,IAAD,CAAOC,CAAP,CAAa,CACjD,mBACI,oBAAC,WAAD,EAAa,GAAG,CAAED,IAAI,CAACE,YAAL,CAAkB,CAAlB,CAAlB,CAAwC,IAAI,CAAEF,IAA9C,CAAoD,YAAY,CAAElB,YAAlE,CAAgF,cAAc,CAAEG,cAAhG,EADJ,CAGH,CAJyB,CAAzB,CAKK,kBANV,CADJ,CAUH,CAED,cAAeP,CAAAA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { doApiGet, apiUrl } from '../services/apiService';\r\nimport CountryItem from './CountryItem';\r\n\r\n\r\n\r\n\r\nfunction Main(props) {\r\n    let [state_arr, setStateArr] = useState([]);\r\n    let [allState_arr, setAllStateArr] = useState([])\r\n    let [countryName,setCourtryName] = useState(\"Israel\")\r\n\r\n    useEffect(() => {\r\n        // let url = \"https://restcountries.eu/rest/v2/name/israel\"\r\n        let url =\"https://restcountries.eu/rest/v2/name/israel?fullText=true\"\r\n        if (props.match) {\r\n            if (props.match.params.name) {\r\n                url =\"https://restcountries.eu/rest/v2/name/\"+props.match.params.name+\"?fullText=true\"\r\n                // url = \"https://restcountries.eu/rest/v2/name/\" + props.match.params.name;\r\n            }\r\n            if (props.match.params.countryCode) {\r\n                url =\"https://restcountries.eu/rest/v2/name/\"+countryName+\"?fullText=true\"\r\n                // url = \"https://restcountries.eu/rest/v2/name/\" + props.match.params.countryCode;\r\n            }\r\n        }\r\n\r\n            doApiGet(url)\r\n                // doApiGet(apiUrl + props.name)\r\n                .then(data => {\r\n                    // console.log(data);\r\n                    setStateArr(data)\r\n                })\r\n                .catch(err => {\r\n                    alert(err)\r\n                    console.log(err)\r\n                })\r\n\r\n        }, [props.match])\r\n\r\n    useEffect(() => {\r\n        // let url =\"https://restcountries.eu/rest/v2/alpha/co\";\r\n        let url = \"https://restcountries.eu/rest/v2/all\"\r\n        doApiGet(url)\r\n            .then(data => {\r\n                setAllStateArr(data)\r\n            })\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            {(state_arr.length > 0) ? state_arr.map((item, i) => {\r\n                return (\r\n                    <CountryItem key={item.callingCodes[0]} item={item} allState_arr={allState_arr} setCourtryName={setCourtryName} />\r\n                )\r\n            })\r\n                : \"result Not Found\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}