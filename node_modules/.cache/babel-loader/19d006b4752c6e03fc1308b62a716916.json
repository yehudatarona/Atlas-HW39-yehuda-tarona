{"ast":null,"code":"const initState = {\n  prods_ar: [],\n  cart_ar: [{\n    id: 2,\n    name: \"Pizza\",\n    price: 20,\n    amount: 1\n  }],\n  counter: 1\n};\nexport const mReducer = (state = initState, action) => {\n  if (action.type === \"addProd\") {\n    return { ...state,\n      prods_ar: action.newProds\n    }; // TODO: add prod to the cart\n  } else if (action.type === \"addToCart\") {\n    //מייצר מערך זמני כדי להוסיף את המוצר החדש בנוסף למוצרים הקיימים\n    return { ...state,\n      cart_ar: checkAddProd(state, action)\n    };\n  } else if (action.type === \"delFromCart\") {\n    let temp_ar = state.cart_ar.filter(item => {\n      return item.id !== action.idDel;\n    });\n    return { ...state,\n      cart_ar: temp_ar\n    };\n  } else {\n    return state;\n  }\n};\n\nconst checkAddProd = (state, action) => {\n  // בודק אם המוצר קיים ואם כן יוסיף לפרופ של הכמות\n  // ואם לא יוסיף כתא חדש במערך\n  let alreadyInCart = false; // let temp_ar = [...state.cart_ar , action.prodItem]\n\n  let temp_ar = [...state.cart_ar];\n  temp_ar.forEach(item => {\n    if (item.id === action.prodItem.id) {\n      item.amount++;\n      alreadyInCart = true;\n    }\n  });\n\n  if (!alreadyInCart) {\n    temp_ar.push(action.prodItem);\n  }\n\n  return temp_ar;\n};","map":{"version":3,"sources":["D:/Speed Tech/Ofer/Recat/react-app/src/mini_redux_comps/reducer/marketReducer.js"],"names":["initState","prods_ar","cart_ar","id","name","price","amount","counter","mReducer","state","action","type","newProds","checkAddProd","temp_ar","filter","item","idDel","alreadyInCart","forEach","prodItem","push"],"mappings":"AAAA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAC,EADO;AAEhBC,EAAAA,OAAO,EAAC,CACN;AACEC,IAAAA,EAAE,EAAC,CADL;AAEAC,IAAAA,IAAI,EAAE,OAFN;AAGAC,IAAAA,KAAK,EAAE,EAHP;AAIAC,IAAAA,MAAM,EAAC;AAJP,GADM,CAFQ;AAShBC,EAAAA,OAAO,EAAC;AATQ,CAAlB;AAaA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAGT,SAAT,EAAqBU,MAArB,KAA+B;AACrD,MAAGA,MAAM,CAACC,IAAP,KAAgB,SAAnB,EAA6B;AAC3B,WAAO,EAAC,GAAGF,KAAJ;AAAUR,MAAAA,QAAQ,EAACS,MAAM,CAACE;AAA1B,KAAP,CAD2B,CAE3B;AACD,GAHD,MAIK,IAAGF,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAA+B;AAClC;AAEA,WAAO,EAAC,GAAGF,KAAJ;AAAWP,MAAAA,OAAO,EAACW,YAAY,CAACJ,KAAD,EAAOC,MAAP;AAA/B,KAAP;AACD,GAJI,MAKA,IAAGA,MAAM,CAACC,IAAP,KAAgB,aAAnB,EAAiC;AACpC,QAAIG,OAAO,GAAGL,KAAK,CAACP,OAAN,CAAca,MAAd,CAAqBC,IAAI,IAAI;AACzC,aAAQA,IAAI,CAACb,EAAL,KAAYO,MAAM,CAACO,KAA3B;AACD,KAFa,CAAd;AAGA,WAAO,EAAC,GAAGR,KAAJ;AAAWP,MAAAA,OAAO,EAACY;AAAnB,KAAP;AACD,GALI,MAMD;AACF,WAAOL,KAAP;AACD;AAEF,CApBM;;AAwBP,MAAMI,YAAY,GAAG,CAACJ,KAAD,EAAOC,MAAP,KAAkB;AACrC;AACA;AACA,MAAIQ,aAAa,GAAG,KAApB,CAHqC,CAIrC;;AACA,MAAIJ,OAAO,GAAG,CAAC,GAAGL,KAAK,CAACP,OAAV,CAAd;AACAY,EAAAA,OAAO,CAACK,OAAR,CAAgBH,IAAI,IAAI;AACtB,QAAGA,IAAI,CAACb,EAAL,KAAYO,MAAM,CAACU,QAAP,CAAgBjB,EAA/B,EAAkC;AAChCa,MAAAA,IAAI,CAACV,MAAL;AACAY,MAAAA,aAAa,GAAG,IAAhB;AACD;AACF,GALD;;AAMA,MAAG,CAACA,aAAJ,EAAmB;AACjBJ,IAAAA,OAAO,CAACO,IAAR,CAAaX,MAAM,CAACU,QAApB;AACD;;AACC,SAAON,OAAP;AACH,CAhBD","sourcesContent":["const initState = {\r\n  prods_ar:[],\r\n  cart_ar:[\r\n    {\r\n      id:2,\r\n    name: \"Pizza\",\r\n    price: 20,\r\n    amount:1}\r\n  ],\r\n  counter:1,\r\n\r\n}\r\n\r\nexport const mReducer = (state = initState , action) =>{\r\n  if(action.type === \"addProd\"){\r\n    return {...state,prods_ar:action.newProds}\r\n    // TODO: add prod to the cart\r\n  }\r\n  else if(action.type === \"addToCart\"){\r\n    //מייצר מערך זמני כדי להוסיף את המוצר החדש בנוסף למוצרים הקיימים\r\n\r\n    return {...state, cart_ar:checkAddProd(state,action)}\r\n  }\r\n  else if(action.type === \"delFromCart\"){\r\n    let temp_ar = state.cart_ar.filter(item => {\r\n      return (item.id !== action.idDel)\r\n    })\r\n    return {...state, cart_ar:temp_ar}\r\n  }\r\n  else{\r\n    return state;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nconst checkAddProd = (state,action) => {\r\n  // בודק אם המוצר קיים ואם כן יוסיף לפרופ של הכמות\r\n  // ואם לא יוסיף כתא חדש במערך\r\n  let alreadyInCart = false;\r\n  // let temp_ar = [...state.cart_ar , action.prodItem]\r\n  let temp_ar = [...state.cart_ar]\r\n  temp_ar.forEach(item => {\r\n    if(item.id === action.prodItem.id){\r\n      item.amount++;\r\n      alreadyInCart = true;\r\n    }\r\n  })\r\n  if(!alreadyInCart ){\r\n    temp_ar.push(action.prodItem)\r\n  }\r\n    return temp_ar;\r\n}"]},"metadata":{},"sourceType":"module"}