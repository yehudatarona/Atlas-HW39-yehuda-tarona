{"ast":null,"code":"var _jsxFileName = \"D:\\\\Speed Tech\\\\Ofer\\\\Recat\\\\react-app\\\\src\\\\atlas_comps\\\\main.js\";\nimport React, { useState, useEffect } from 'react';\nimport { doApiGet, apiUrl } from '../services/apiService';\nimport CountryItem from './CountryItem';\n\nfunction Main(props) {\n  let [state_arr, setStateArr] = useState(null);\n  let [allState_arr, setAllStateArr] = useState([]);\n  let [countryName, setCourtryName] = useState(\"Israel\");\n  useEffect(() => {\n    let url = \"https://restcountries.eu/rest/v2/name/\" + countryName + \"?fullText=true\";\n\n    if (props.match) {\n      if (props.match.params.name) {\n        url = \"https://restcountries.eu/rest/v2/name/\" + props.match.params.name + \"?fullText=true\";\n      }\n\n      if (props.match.params.countryCode) {\n        url = \"https://restcountries.eu/rest/v2/alpha/\" + props.match.params.countryCode;\n      }\n    }\n\n    doApiGet(url) // doApiGet(apiUrl + props.name)\n    .then(data => {\n      console.log(\"kjgkfjg\", data);\n\n      if (props.match.params.countryCode) {\n        setStateArr(data);\n      } else {\n        setStateArr(data[0]);\n      }\n    }).catch(err => {\n      alert(err);\n      console.log(err);\n    });\n  }, [props.match]);\n  useEffect(() => {\n    let url = \"https://restcountries.eu/rest/v2/all\";\n    doApiGet(url).then(data => {\n      setAllStateArr(data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, state_arr ? /*#__PURE__*/React.createElement(CountryItem, {\n    item: state_arr,\n    allState_arr: allState_arr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 27\n    }\n  }) : \"Result Not Found\");\n}\n\nexport default Main;","map":{"version":3,"sources":["D:/Speed Tech/Ofer/Recat/react-app/src/atlas_comps/main.js"],"names":["React","useState","useEffect","doApiGet","apiUrl","CountryItem","Main","props","state_arr","setStateArr","allState_arr","setAllStateArr","countryName","setCourtryName","url","match","params","name","countryCode","then","data","console","log","catch","err","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,wBAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAKA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,MAAI,CAACC,SAAD,EAAYC,WAAZ,IAA2BR,QAAQ,CAAC,IAAD,CAAvC;AACA,MAAI,CAACS,YAAD,EAAeC,cAAf,IAAiCV,QAAQ,CAAC,EAAD,CAA7C;AACA,MAAI,CAACW,WAAD,EAAaC,cAAb,IAA+BZ,QAAQ,CAAC,QAAD,CAA3C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIY,GAAG,GAAE,2CAAyCF,WAAzC,GAAqD,gBAA9D;;AACA,QAAIL,KAAK,CAACQ,KAAV,EAAiB;AACb,UAAIR,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,IAAvB,EAA6B;AACzBH,QAAAA,GAAG,GAAE,2CAAyCP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,IAA5D,GAAiE,gBAAtE;AAEH;;AACD,UAAIV,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBE,WAAvB,EAAoC;AAChCJ,QAAAA,GAAG,GAAE,4CAA0CP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBE,WAAlE;AAEH;AACJ;;AAEGf,IAAAA,QAAQ,CAACW,GAAD,CAAR,CACI;AADJ,KAEKK,IAFL,CAEUC,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,IAAtB;;AACA,UAAGb,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBE,WAAtB,EAAkC;AAE9BT,QAAAA,WAAW,CAACW,IAAD,CAAX;AACH,OAHD,MAII;AACAX,QAAAA,WAAW,CAACW,IAAI,CAAC,CAAD,CAAL,CAAX;AACH;AACJ,KAXL,EAYKG,KAZL,CAYWC,GAAG,IAAI;AACVC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KAfL;AAiBH,GA/BI,EA+BF,CAACjB,KAAK,CAACQ,KAAP,CA/BE,CAAT;AAiCAb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,GAAG,GAAG,sCAAV;AACAX,IAAAA,QAAQ,CAACW,GAAD,CAAR,CACKK,IADL,CACUC,IAAI,IAAI;AACVT,MAAAA,cAAc,CAACS,IAAD,CAAd;AACH,KAHL;AAMH,GARQ,EAQN,EARM,CAAT;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMZ,SAAD,gBAAa,oBAAC,WAAD;AAAc,IAAA,IAAI,EAAEA,SAApB;AAA+B,IAAA,YAAY,EAAEE,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb,GAA2E,kBADhF,CADJ;AAKH;;AAED,eAAeJ,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { doApiGet, apiUrl } from '../services/apiService';\r\nimport CountryItem from './CountryItem';\r\n\r\n\r\n\r\n\r\nfunction Main(props) {\r\n    let [state_arr, setStateArr] = useState(null);\r\n    let [allState_arr, setAllStateArr] = useState([])\r\n    let [countryName,setCourtryName] = useState(\"Israel\")\r\n\r\n    useEffect(() => {\r\n        \r\n        let url =\"https://restcountries.eu/rest/v2/name/\"+countryName+\"?fullText=true\"\r\n        if (props.match) {\r\n            if (props.match.params.name) {\r\n                url =\"https://restcountries.eu/rest/v2/name/\"+props.match.params.name+\"?fullText=true\"\r\n               \r\n            }\r\n            if (props.match.params.countryCode) {\r\n                url= \"https://restcountries.eu/rest/v2/alpha/\"+props.match.params.countryCode\r\n               \r\n            }\r\n        }\r\n\r\n            doApiGet(url)\r\n                // doApiGet(apiUrl + props.name)\r\n                .then(data => {\r\n                    console.log(\"kjgkfjg\",data);\r\n                    if(props.match.params.countryCode){\r\n\r\n                        setStateArr(data);\r\n                    }\r\n                    else{\r\n                        setStateArr(data[0]);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    alert(err)\r\n                    console.log(err)\r\n                })\r\n\r\n        }, [props.match])\r\n\r\n    useEffect(() => {\r\n        let url = \"https://restcountries.eu/rest/v2/all\"\r\n        doApiGet(url)\r\n            .then(data => {\r\n                setAllStateArr(data)\r\n            })\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            {(state_arr)? <CountryItem  item={state_arr} allState_arr={allState_arr} />:\"Result Not Found\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}